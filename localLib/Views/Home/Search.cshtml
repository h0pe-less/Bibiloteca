@model PaginatedList<localLib.Models.Carte>

@{
    ViewData["Title"] = "Search";
}

<link rel="stylesheet" href="~/css/searchstyle.css" />

<div class="main-container">
    <div class="search-bar">
        <form asp-action="Search" method="get">
            <div class="search-container">
                <input type="text" name="searchQuery"
                       value="@ViewBag.SearchQuery"
                       placeholder="Search for books by title, author...">
                <button type="submit" class="search-button">
                    <img src="https://cdn-icons-png.flaticon.com/512/149/149852.png" alt="Search">
                </button>
            </div>
        </form>
    </div>

    <div class="search-tooltip">
        <h1>
            <a asp-action="Search" class="clear-link">Clear filters</a>
        </h1>
        <div class="pagination-info">
            Showing @Model.Count of @ViewBag.TotalCount
            @if (!string.IsNullOrEmpty(ViewBag.SearchQuery))
            {
                <span> for "@ViewBag.SearchQuery"</span>
            }
        </div>
        <div class="sort-options">
            <span>Sort by:</span>
            <form asp-action="Search" method="get" id="sortForm">
                <input type="hidden" name="searchQuery" value="@ViewBag.SearchQuery" />
                <select name="sortBy" onchange="this.form.submit()">
                    <option value="Relevanta" selected="@(ViewBag.SortBy == "Relevanta")">Relevance</option>
                    <option value="Cele mai noi" selected="@(ViewBag.SortBy == "Cele mai noi")">Newest</option>
                    <option value="Cele mai vechi" selected="@(ViewBag.SortBy == "Cele mai vechi")">Oldest</option>
                    <option value="Titlu A-Z" selected="@(ViewBag.SortBy == "Titlu A-Z")">Title A-Z</option>
                    <option value="Titlu Z-A" selected="@(ViewBag.SortBy == "Titlu Z-A")">Title Z-A</option>
                </select>
            </form>
        </div>
    </div>

    <div class="search-results">
        <div class="book-grid">
            @if (Model != null && Model.Any())
            {
                foreach (var carte in Model)
                {
                    <div class="book-card">
                        <div class="book-cover">
                            <img src="@(string.IsNullOrEmpty(carte.CopertaURL) ? "/images/libanimation.jpg" : carte.CopertaURL)"
                                 alt="Pagina de titlu @carte.Titlu">
                        </div>
                        <div class="book-details">
                            <h3 class="book-title">@carte.Titlu</h3>
                            <p class="book-authors">
                                @{
                                    var authors = carte.Autori?
                                    .Where(ca => ca?.Autor != null)
                                    .Select(ca => ca.Autor.NumePrenume)
                                    .Where(name => !string.IsNullOrEmpty(name));

                                    if (authors?.Any() == true)
                                    {
                                        <text>Autori: @string.Join(", ", authors)</text>
                                    }
                                    else
                                    {
                                        <text>Autor: Necunoscut</text>
                                    }
                                }
                            </p>
                            <p class="book-summary">
                                @(string.IsNullOrEmpty(carte.Descriere) ? "Nu are descriere" :
                                    (carte.Descriere.Length > 150 ? carte.Descriere.Substring(0, 150) + "..." : carte.Descriere))
                            </p>
                            <p class="book-publisher">
                                Editura: @(carte.Editura?.Denumire ?? "Necunoscut")
                            </p>
                            <p class="book-year">
                                Data publicarii: @(carte.DataPublicarii.Year.ToString() ?? "An necunoscut")
                            </p>
                            <a asp-action="Details" asp-route-id="@carte.CarteId" class="details-link">Click pentru mai multe detalii</a>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="no-results">
                    <p>No books found matching your search criteria.</p>
                    <a asp-action="Index" class="clear-search">Clear search</a>
                </div>
            }
        </div>

        <div class="search-filters">
            <div class="filter-section">
                <h3>Filter by Type</h3>
                <label><input type="checkbox"> eBook</label><br>
                <label><input type="checkbox"> Print Book</label><br>
                <label><input type="checkbox"> Article</label>
            </div>

            <div class="filter-section">
                <h3>Filter by Language</h3>
                <label><input type="checkbox"> Swedish</label><br>
                <label><input type="checkbox"> Slovenian</label><br>
                <label><input type="checkbox"> English</label>
            </div>

            <div class="filter-section">
                <h3>Publication Year</h3>
                <input type="range" min="2000" max="2023">
            </div>
        </div>
    </div>
    <div class="pages">
        @if (Model.TotalPages > 1)
        {
            <nav class="pagination">
                @if (Model.HasPreviousPage)
                {
                    <a asp-action="Search"
                       asp-route-searchQuery="@ViewBag.SearchQuery"
                       asp-route-sortBy="@ViewBag.SortBy"
                       asp-route-page="@(Model.PageIndex - 1)"
                       class="page-link">&laquo; Inapoi</a>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <a asp-action="Search"
                       asp-route-searchQuery="@ViewBag.SearchQuery"
                       asp-route-sortBy="@ViewBag.SortBy"
                       asp-route-page="@i"
                       class="page-link @(i == Model.PageIndex ? "active" : "")">@i</a>
                }

                @if (Model.HasNextPage)
                {
                    <a asp-action="Search"
                       asp-route-searchQuery="@ViewBag.SearchQuery"
                       asp-route-sortBy="@ViewBag.SortBy"
                       asp-route-page="@(Model.PageIndex + 1)"
                       class="page-link">Urmatoarea &raquo;</a>
                }
            </nav>
        }
    </div>
    @section Scripts {
        <script>
            document.querySelector('input[name="searchQuery"]')?.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    this.closest('form').submit();
                }
            });

            document.querySelectorAll('form').forEach(form => {
                form.onsubmit = function() {
                    const pageInput = this.querySelector('input[name="page"]');
                    if (pageInput) pageInput.value = 1;
                    return true;
                };
            });
        </script>
    }
</div>